name: Test helm chart

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      chartVersion:
        type: string
        required: true
      chartName:
        required: true
        type: string
        description: "Chartname to test"

  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'RocketChat tag to test'
      chartVersion:
        description: 'Chart version to test'
        required: true
      chartName:
        required: true
        type: string
        description: "Name of the chart to test"
  push:
    paths:
      - 'rocketchat/**'
      - 'bats/**'
      - 'mock/**'
      - '.github/workflows/test.yml'
      - 'task.bash'

env: 
  REPO: 'RocketChat/helm-charts'
  TESTS_REPO: 'RocketChat/public-releases'

jobs:
  # this 3 jobs will run in parallel for warming up the workflow
  setup-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Setup docker
        uses: docker/setup-docker-action@v4

  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          skip-creation: true

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      chartNames: ${{ steps.set-chartname.outputs.chartname }}
    steps:
      - name: Clone helm chart repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            ci:
              - bats/**
              - task.bash
              - .github/workflows/test.yml
            charts:
              - rocketchat/**
              - monitoring/**

      - name: Set chartname variable
        id: set-chartname
        run: |
          chartNames=()
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          if [[ -z "$changed_files" ]]; then
            echo "No changed files detected"
          else
            if echo "$changed_files" | grep -qE '^rocketchat/| rocketchat/'; then
              chartNames+=("rocketchat")
            fi
            if echo "$changed_files" | grep -qE '^monitoring/| monitoring/'; then
              chartNames+=("monitoring")
            fi
          fi

          # Remove duplicates
          unique_chartNames=($(printf "%s\n" "${chartNames[@]}" | sort -u))

          # Build JSON array string
          json_array=$(printf '"%s",' "${unique_chartNames[@]}")
          json_array="[${json_array%,}]"

          echo "chartname=${json_array}" >> $GITHUB_OUTPUT

  mock:
    needs:
      - detect-changes
      - setup-docker
      - setup-k3d
    strategy:
      matrix:
        chartName: ${{ fromJson(needs.detect-changes.outputs.chartNames) }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone helm chart repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - run: ./task.bash mock "${{ needs.detect-changes.outputs.chartname }}"


  # cluster:
  #   needs:
  #     - mock
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone helm chart repository
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - uses: nolar/setup-k3d-k3s@v1
  #       with:
  #         skip-creation: true

  #     - run: ./task.bash cluster "${{ needs.detect-changes.outputs.chartname }}"