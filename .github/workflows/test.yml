name: Test helm chart

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      chartVersion:
        type: string
        required: true
      chartName:
        required: true
        type: string
        description: "Chartname to test"

  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: 'RocketChat tag to test'
      chartVersion:
        description: 'Chart version to test'
        required: true
      chartName:
        required: true
        type: string
        description: "Name of the chart to test"
  push:
    paths:
      - 'rocketchat/**'
      - 'bats/**'
      - 'mock/**'
      - '.github/workflows/test.yml'
      - 'task.bash'

env: 
  REPO: 'RocketChat/helm-charts'
  TESTS_REPO: 'RocketChat/public-releases'

jobs:
  # this 3 jobs will run in parallel for warming up the workflow
  setup-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Setup docker
        uses: docker/setup-docker-action@v4

  setup-k3d:
    runs-on: ubuntu-latest
    steps:
      - uses: nolar/setup-k3d-k3s@v1
        with:
          skip-creation: true

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      chartname: ${{ steps.set-chartname.outputs.chartname }}
    steps:
      - name: Clone helm chart repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            rocketchat/**
            monitoring/**
            bats/**
            mock/**
      - name: Set chartname variable
        id: set-chartname
        run: |
          declare -a chartNames

          for file in $(echo "${{ steps.files.outputs.all_changed_files }}"); do
            case "$file" in
              bats/*)
              mock/**)
              task.bash)
              .github/workflows/test.yml)
                chartNames+=("rocketchat" "monitoring")
                break
                ;;
              rocketchat/*)
                chartNames+=("rocketchat")
                ;;
              monitoring/*)
                chartNames+=("monitoring")
                ;;
            esac
          done
          echo "===================="

          strings=""
          for chart in "${chartNmaes[@]}"; do
            strings+="\"${chart}\""
          done
          strings="[${string}]"
          echo "::set-output name=chartname::${strings}" | tee -a $GITHUB_OUTPUT


  mock:
    needs:
      - detect-changes
      - setup-docker
      - setup-k3d
      - clone
    strategy:
      matrix:
        chartName: ${{ fromJson(needs.detect-changes.outputs.chartname) }}
    runs-on: ubuntu-latest
    steps:
      - name: Clone helm chart repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - run: ./task.bash mock "${{ needs.detect-changes.outputs.chartname }}"


  # cluster:
  #   needs:
  #     - mock
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone helm chart repository
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - uses: nolar/setup-k3d-k3s@v1
  #       with:
  #         skip-creation: true

  #     - run: ./task.bash cluster "${{ needs.detect-changes.outputs.chartname }}"