apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-credentials
type: Opaque
stringData:
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: admin
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: prometheus
spec:
  allowCrossNamespaceImport: true
  instanceSelector:
    matchLabels:
      grafana: dashboards
  datasource:
    name: prometheus
    type: prometheus
    access: proxy
    url: http://prometheus-operated.{{.Release.Namespace}}.svc.cluster.local:9090
    isDefault: true
    jsonData:
      "tlsSkipVerify": true
      "timeInterval": "5s"
    editable: true
---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    grafana: dashboards  # THIS LABELS is very important
spec:
  config:
    log:
      mode: console
    auth:
      disable_login_form: "false"
  deployment:
    metadata:
      labels:
        grafana: dashboards  # THIS LABELS is very important
    spec:
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            grafana: dashboards  # THIS LABELS is very important
        spec:
          containers:
            - name: grafana
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: ["ALL"]
              env:
                - name: GF_SECURITY_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_USER
                      name: grafana-admin-credentials
                - name: GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_PASSWORD
                      name: grafana-admin-credentials
          securityContext:
            fsGroup: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          # volumes:
          #   - name: grafana-data
          #     persistentVolumeClaim:
          #       claimName: grafana-pvc
  # persistentVolumeClaim:
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 4Gi

  # ingress:
  #   spec:
  #     ingressClassName: nginx-internal
  #     rules:
  #       - host: monitoring.lab.internal
  #         http:
  #           paths:
  #             - backend:
  #                 service:
  #                   name: grafana-service
  #                   port:
  #                     number: 3000
  #               path: /
  #               pathType: Prefix
