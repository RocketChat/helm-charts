{{ if and .Values.ingress.enabled (or .Values.ingress.prometheus.enabled .Values.ingress.grafana.enabled) }}
{{- if not .Values.ingress.ingressClassName }}
  {{- fail "ingress.ingressClassName is required when ingress.enabled is true, and it must be one of: nginx, traefik" }}
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: "{{ .Values.ingress.ingressClassName }}"
  rules:
    {{- if .Values.ingress.prometheus.enabled }}
      {{- if and (not .Values.ingress.prometheus.host) (not .Values.ingress.prometheus.path) }}
        {{- fail "either ingress.prometheus.host or ingress.prometheus.path is required when ingress.enabled is true" }}
      {{- end }}
    - host: {{ not .Values.ingress.prometheus.host | ternary .Values.ingress.domain .Values.ingress.prometheus.host}}
      http:
        paths:
          - path: {{ .Values.ingress.prometheus.path | default "/" }}
            pathType: Prefix
            backend:
              service:
                name: prometheus-operated
                port:
                  name: http-web
    {{- end }}
    {{- if .Values.ingress.grafana.enabled }}
    - host: {{ not .Values.ingress.grafana.host | ternary .Values.ingress.domain .Values.ingress.grafana.host }}
      {{- if and (not .Values.ingress.grafana.host) (not .Values.ingress.grafana.path) }}
        {{- fail "either ingress.grafana.host or ingress.grafana.path is required when ingress.enabled is true" }}
      {{- end }}
      http:
        paths:
          - path: "{{ .Values.ingress.grafana.path | default "/" }}"
            pathType: Prefix
            backend:
              service:
                name: grafana-service
                port:
                  name: grafana
    {{- end }}
  {{ if or .Values.ingress.prometheus.tls .Values.ingress.grafana.tls }}
    tls:
      - hosts:
          {{- if .Values.ingress.prometheus.tls }}
            - {{ .Values.ingress.prometheus.host }}
          {{- end }}
          {{- if .Values.ingress.grafana.tls }}
            - {{ .Values.ingress.grafana.host }}
          {{- end }}
      secretName: prometheus-prometheus-tls
  {{ end }}
---
apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: "{{ $.Release.Name }}-ingress-{{ $.Values.ingress.ingressClassName}}"
  labels:
    dashboards: "grafana"
spec:
  allowCrossNamespaceImport: true
  folder: General
  instanceSelector:
    matchLabels:
      grafana: dashboards
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "prometheus" # this is the one generated by the prometheus-operator
  {{- if eq $.Values.ingress.ingressClassName "nginx" }}
  url: "https://grafana.com/api/dashboards/20275/revisions/latest/download"
  {{- else }}
  url: "https://grafana.com/api/dashboards/17347/revisions/latest/download"
  {{- end -}}
  contentCacheDuration: 48h
{{ end }} # if ingress.enabled